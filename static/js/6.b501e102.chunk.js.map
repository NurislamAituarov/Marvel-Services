{"version":3,"sources":["components/comics/Comics.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["Comics","useState","arr","setArr","services","Services","offset","setOffset","itemRefs","useRef","btnActive","setBtn","useEffect","getComics","then","comics","data","results","onFocus","id","current","forEach","elem","classList","remove","add","focus","onClickItemComics","name","content","className","src","venom","alt","style","width","display","alignItems","justifyContent","iron","map","item","i","onClick","onKeyPress","e","code","ref","el","tabIndex","to","thumbnail","path","extension","title","margin","marginTop","marginBottom","_toConsumableArray","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError"],"mappings":"yNAoGeA,UA3FA,WACb,MAAsBC,qBAAtB,mBAAOC,EAAP,KAAYC,EAAZ,KACMC,EAAW,IAAIC,IACrB,EAA4BJ,mBAAS,KAArC,mBAAOK,EAAP,KAAeC,EAAf,KACMC,EAAWC,iBAAO,IACxB,EAA4BR,oBAAS,GAArC,mBAAOS,EAAP,KAAkBC,EAAlB,KAEAC,qBAAU,WACRR,EAASS,YAAYC,MAAK,SAACC,GACzBZ,EAAOY,EAAOC,KAAKC,cAEpB,IAEH,IAAMC,EAAU,SAACC,GAEfX,EAASY,QAAQC,SAAQ,SAACC,GAAD,OAAUA,EAAKC,UAAUC,OAAO,iBACzDhB,EAASY,QAAQD,GAAII,UAAUE,IAAI,cACnCjB,EAASY,QAAQD,GAAIO,SAEjBC,EAAoB,SAACR,GACzBD,EAAQC,IAoCV,OACE,qCACE,eAAC,IAAD,WACE,sBAAMS,KAAK,cAAcC,QAAQ,iCACjC,mDAEF,sBAAKC,UAAU,gBAAf,UACE,sBAAKA,UAAU,SAAf,UACE,qBAAKC,IAAKC,IAAOC,IAAI,WACrB,qBACEC,MAAO,CACLC,MAAO,QACPC,QAAS,OACTC,WAAY,SACZC,eAAgB,iBALpB,SAOE,4CAEF,qBAAKP,IAAKQ,IAAMN,IAAI,WAErB/B,EACC,oBAAI4B,UAAU,WAAd,SArDC5B,EAAIsC,KAAI,SAACC,EAAMC,GACpB,OACE,oBACEC,QAAS,kBAAMhB,EAAkBe,IACjCZ,UAAU,aACVc,WAAY,SAACC,GACI,SAAXA,EAAEC,MAA8B,UAAXD,EAAEC,OACzB5B,EAAQwB,GACRf,EAAkBe,KAGtBK,IAAK,SAACC,GAAD,OAASxC,EAASY,QAAQsB,GAAKM,GACpCC,SAAU,EAVZ,SAYE,eAAC,IAAD,CAASC,GAAE,kBAAaT,EAAKtB,IAA7B,UACE,qBAAKY,IAAKU,EAAKU,UAAUC,KAAO,IAAMX,EAAKU,UAAUE,UAAWpB,IAAI,QACpE,+BAAOQ,EAAKa,YAHTZ,QA0CL,qBACER,MAAO,CAAEC,MAAO,QAASoB,OAAQ,SAAUC,UAAW,QAASC,aAAc,SAD/E,SAEE,cAAC,IAAD,MAGJ,wBAAQd,QArCI,WAChBhC,GAAO,GACPJ,GAAU,SAACD,GAAD,OAAYA,EAAS,KAC/BF,EAASS,UAAUP,GAAQQ,MAAK,SAACC,GAC/BJ,GAAO,GACPR,GAAO,SAACD,GAAD,4BAAaA,GAAb,YAAqBa,EAAOC,KAAKC,iBAgCVa,UAAWpB,EAAY,kBAAoB,MAAvE,+B,0FCzFO,SAASgD,EAAmBxD,GACzC,OCJa,SAA4BA,GACzC,GAAIyD,MAAMC,QAAQ1D,GAAM,OAAO,OAAA2D,EAAA,GAAiB3D,GDGzC,CAAkBA,IELZ,SAA0B4D,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgB5D,IAAQ,OAAAiE,EAAA,GAA2BjE,IGLvE,WACb,MAAM,IAAIkE,UAAU,wIHIwE","file":"static/js/6.b501e102.chunk.js","sourcesContent":["import { Helmet } from 'react-helmet';\nimport './comics.scss';\nimport Services from '../../services/services';\nimport { useState, useEffect, useRef } from 'react';\nimport Spinner from '../../spinner/spinner';\nimport { NavLink } from 'react-router-dom';\nimport venom from '../../image/venom.jpg';\nimport iron from '../../image/iron.jpg';\n\nconst Comics = () => {\n  const [arr, setArr] = useState();\n  const services = new Services();\n  const [offset, setOffset] = useState(108);\n  const itemRefs = useRef([]);\n  const [btnActive, setBtn] = useState(false);\n\n  useEffect(() => {\n    services.getComics().then((comics) => {\n      setArr(comics.data.results);\n    });\n  }, []);\n\n  const onFocus = (id) => {\n    // console.log(itemRefs.current[id]);\n    itemRefs.current.forEach((elem) => elem.classList.remove('showComics'));\n    itemRefs.current[id].classList.add('showComics');\n    itemRefs.current[id].focus();\n  };\n  const onClickItemComics = (id) => {\n    onFocus(id);\n  };\n\n  const comicsItem = () => {\n    return arr.map((item, i) => {\n      return (\n        <li\n          onClick={() => onClickItemComics(i)}\n          className=\"comicsItem\"\n          onKeyPress={(e) => {\n            if (e.code === 'KeyP' || e.code === 'Enter') {\n              onFocus(i);\n              onClickItemComics(i);\n            }\n          }}\n          ref={(el) => (itemRefs.current[i] = el)}\n          tabIndex={0}\n          key={i}>\n          <NavLink to={`/Comics/${item.id}`}>\n            <img src={item.thumbnail.path + '.' + item.thumbnail.extension} alt=\"img\"></img>\n            <span>{item.title}</span>\n          </NavLink>\n        </li>\n      );\n    });\n  };\n\n  const newComics = () => {\n    setBtn(true);\n    setOffset((offset) => offset + 8);\n    services.getComics(offset).then((comics) => {\n      setBtn(false);\n      setArr((arr) => [...arr, ...comics.data.results]);\n    });\n  };\n\n  return (\n    <>\n      <Helmet>\n        <meta name=\"description\" content=\"Page with list of our comics\" />\n        <title>Comics page</title>\n      </Helmet>\n      <div className=\"wrapperComics\">\n        <div className=\"header\">\n          <img src={venom} alt=\"header\" />\n          <div\n            style={{\n              width: '270px',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n            }}>\n            <span>Comics</span>\n          </div>\n          <img src={iron} alt=\"img\" />\n        </div>\n        {arr ? (\n          <ul className=\"block__2\">{comicsItem()}</ul>\n        ) : (\n          <div\n            style={{ width: '200px', margin: '0 auto', marginTop: '100px', marginBottom: '100px' }}>\n            <Spinner />\n          </div>\n        )}\n        <button onClick={newComics} className={btnActive ? 'btn btn__active' : 'btn'}>\n          LOAD MORE\n        </button>\n      </div>\n    </>\n  );\n};\nexport default Comics;\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}